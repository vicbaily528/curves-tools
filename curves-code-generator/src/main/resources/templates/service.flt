package ${project.packagePath}.services.service.impl;

import ${project.packagePath}.services.pojo.vo.${table.className}Query;
import ${project.packagePath}.services.mapper.${table.className}Mapper;
import ${project.packagePath}.services.pojo.entity.${table.className}Entity;
import ${project.packagePath}.services.service.I${table.className}Service;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * ${table.tableComment} 接口实现类
 * @author ${project.projectAuthor}
 */
@Service
@Transactional
public class ${table.className}ServiceImpl implements I${table.className}Service {

    @Autowired
    private ${table.className}Mapper ${table.attributeName}Mapper;

    /**
     * 分页查询
     * @param ${table.attributeName}Query 用户查询对象
     * @return List<${table.className}Do> 分页结果
     */
    @Override
    public List<${table.className}Entity> select${table.className}ByPage(${table.className}Query ${table.attributeName}Query) {
        return ${table.attributeName}Mapper.select${table.className}ByPage(${table.attributeName}Query);
    }

    /**
     * 通过主键删除对象
     * @param uuid 主键
     * @return int 影响条数
     */
    @Override
    public int deleteByPrimaryKey(String uuid) {
        return ${table.attributeName}Mapper.deleteByPrimaryKey(uuid);
    }

    /**
     * 通过主键批量删除对象
     * @param uuids 主键
     * @return int 影响条数
     */
    @Override
    public int deleteByPrimaryKeys(List<String> uuids) {
        return ${table.attributeName}Mapper.deleteByPrimaryKeys(uuids);
    }

    /**
     * 保存用户信息
     * @param record 对象
     * @return int 数据处理条数
     */
    @Override
    public int insert(${table.className}Entity record) {
        return ${table.attributeName}Mapper.insert(record);
    }

    /**
     * 通过主键查询对象
     * @param uuid 主键
     * @return ${table.className}Do 对象
     */
    @Override
    public ${table.className}Entity selectByPrimaryKey(String uuid) {
        return ${table.attributeName}Mapper.selectByPrimaryKey(uuid);
    }

    /**
     * 更新对象
     * @param record 对象
     * @return int 影响条数
     */
    @Override
    public int updateByPrimaryKey(${table.className}Entity record) {
        return ${table.attributeName}Mapper.updateByPrimaryKey(record);
    }
}
